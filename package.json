{
  "name": "task-creator",
  "version": "0.4.0",
  "description": "Script para criar tarefas automaticamente, baseado em regras.",
  "settingsSchema": {
    "display": "form",
    "settings": {
      "pdf": {
        "id": "1ec0f8ee-6685-5d98-a847-26f67b67d6f0",
        "src": "https://files.form.io/pdf/5692b91fd1028f01000407e3/file/1ec0f8ee-6685-5d98-a847-26f67b67d6f0"
      }
    },
    "components": [
      {
        "label": "Tarefas Automaticas",
        "tableView": false,
        "templates": {
          "header": "",
          "row": "<div class=\"row\">\n      <div class=\"col-sm-2\">\n        {{ row.tpl.name || '' }}\n      </div>\n      {% if (!instance.options.readOnly && !instance.disabled) { %}\n        <div class=\"col-sm-2\">\n          <div class=\"btn-group pull-right\">\n            <button class=\"btn btn-default btn-light btn-sm editRow\"><i class=\"{{ iconClass('edit') }}\"></i></button>\n            {% if (!instance.hasRemoveButtons || instance.hasRemoveButtons()) { %}\n              <button class=\"btn btn-danger btn-sm removeRow\"><i class=\"{{ iconClass('trash') }}\"></i></button>\n            {% } %}\n          </div>\n        </div>\n      {% } %}\n    </div>"
        },
        "rowDrafts": false,
        "key": "generators",
        "type": "editgrid",
        "displayAsTable": false,
        "input": true,
        "components": [
          {
            "label": "Ativadores",
            "reorder": false,
            "addAnotherPosition": "bottom",
            "layoutFixed": false,
            "enableRowGroups": false,
            "initEmpty": false,
            "tableView": false,
            "defaultValue": [
              {}
            ],
            "key": "triggers",
            "type": "datagrid",
            "input": true,
            "components": [
              {
                "label": "Ao",
                "widget": "choicesjs",
                "tableView": true,
                "data": {
                  "values": [
                    {
                      "label": "Fechar tarefa",
                      "value": "TASK_SUBMIT"
                    },
                    {
                      "label": "Enviar formulario",
                      "value": "FORM_SUBMIT"
                    }
                  ]
                },
                "validate": {
                  "required": true
                },
                "key": "when",
                "type": "select",
                "input": true
              },
              {
                "label": "ID",
                "tableView": true,
                "validate": {
                  "required": true,
                  "custom": "valid = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/.test(input) ? true : 'ID inválido';"
                },
                "key": "id",
                "customConditional": "show = row.when === 'TASK_SUBMIT' || row.when === 'FORM_SUBMIT';",
                "type": "textfield",
                "input": true
              }
            ]
          },
          {
            "label": "Template",
            "tableView": false,
            "key": "tpl",
            "type": "container",
            "input": true,
            "components": [
              {
                "html": "<p><span class=\"text-big\"><strong>Como posso definir dados dinámicos?</strong></span></p><p>Todos os campos tipo texto podem ser dinámicos. Um campo dinámico pode ser definido como:</p><blockquote><p>&lt;%= it.data.DEVICE_ID %&gt;</p></blockquote><p>Os <i>&lt;%=</i> e <i>%&gt;</i> indicam que os dados inclusos dentro são dinámicos. Neste exemplo, o campo iria ter o valor do telefone para DEVICE_ID (o identificador do dispositivo).</p><p>Sempre que acessar um dado dinámico, primeiramente é necessário acessar a variável <strong>it</strong>. Essa variável, além de data (os valores que pode ver no debug do telefone no ScriptData), tem:</p><ul><li><strong>data:</strong> valores do telefone, encontra-se no ScriptData. Outros scripts ou dados do telefones podem criar dados no data.</li><li><strong>formId: </strong>identificador do formulário, se o submit tivesse um formulário.</li><li><strong>form:</strong> dados do formulario, se o submit tivesse um <i>formId.</i></li><li><strong>taskId: </strong>identificador da tareafa, se o submit tivesse uma tarefa.</li><li><strong>task:</strong> dados da tarefa, se o submit tivesse um <i>taskId.</i></li><li><strong>submit: </strong>contem os dados do submit atual. Nele, é possível acessar \"<i>data</i>\", com as respostas do formulario (se tiver)</li></ul><p><strong>Exemplos:</strong></p><blockquote><p>Test Task (&lt;%= it.submit.data.name %&gt;)</p></blockquote><blockquote><p>&lt;%= it.data.DEVICE_ID %&gt;</p></blockquote><blockquote><p>&lt;%= it.data.NAO_EXISTE || \"\" %&gt;</p></blockquote><p>Qualquer código javascript pode ser executado dentro dos campos dinámicos.</p>",
                "label": "Ajuda",
                "refreshOnChange": false,
                "key": "ajuda",
                "type": "content",
                "input": false,
                "tableView": false
              },
              {
                "label": "Nome",
                "tooltip": "Campo dinámico",
                "tableView": true,
                "validate": {
                  "required": true,
                  "minLength": 3,
                  "maxLength": 300
                },
                "key": "name",
                "type": "textfield",
                "input": true
              },
              {
                "label": "show",
                "tableView": false,
                "key": "show",
                "type": "checkbox",
                "input": true,
                "defaultValue": true
              },
              {
                "label": "Atribuído a",
                "tooltip": "Campo dinámico.",
                "tableView": true,
                "key": "assignedTo",
                "type": "textfield",
                "input": true
              },
              {
                "label": "Descrição",
                "tooltip": "Campo dinámico.",
                "autoExpand": false,
                "tableView": true,
                "key": "description",
                "type": "textarea",
                "input": true
              },
              {
                "label": "ID de Formulario",
                "tooltip": "Campo dinámico.",
                "tableView": true,
                "validate": {
                  "custom": "valid = !input || /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/.test(input) ? true : 'ID inválido';"
                },
                "key": "formId",
                "type": "textfield",
                "autoExpand": false,
                "input": true
              },
              {
                "label": "Ordem",
                "mask": false,
                "tableView": false,
                "defaultValue": 1000,
                "delimiter": false,
                "requireDecimal": false,
                "inputFormat": "plain",
                "truncateMultipleSpaces": false,
                "key": "order",
                "type": "number",
                "input": true
              },
              {
                "label": "Icone",
                "tooltip": "Campo dinámico.",
                "tableView": true,
                "defaultValue": "crop-square",
                "key": "icon",
                "type": "textfield",
                "input": true
              },
              {
                "label": "Tipo de icone",
                "tooltip": "Campo dinámico.",
                "tableView": true,
                "defaultValue": "material",
                "key": "iconType",
                "type": "textfield",
                "input": true
              },
              {
                "label": "Tags",
                "tableView": false,
                "storeas": "array",
                "key": "tags",
                "type": "tags",
                "input": true
              },
              {
                "label": "Webhooks",
                "tableView": true,
                "multiple": true,
                "validate": {
                  "custom": "valid = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/.test(input) ? true : 'URL Inválida';"
                },
                "key": "webhooks",
                "type": "textfield",
                "input": true
              },
              {
                "label": "Metadatos",
                "keyLabel": "Key",
                "addAnother": "Adicionar",
                "tableView": false,
                "key": "metadata",
                "type": "datamap",
                "input": true,
                "valueComponent": {
                  "type": "textfield",
                  "key": "value",
                  "label": "Value",
                  "input": true,
                  "hideLabel": true,
                  "tableView": true
                }
              }
            ]
          }
        ]
      },
      {
        "label": "Submit",
        "showValidations": false,
        "block": true,
        "disableOnInvalid": true,
        "tableView": false,
        "key": "submit",
        "type": "button",
        "input": true,
        "saveOnEnter": false
      }
    ]
  },
  "license": "MIT",
  "private": true,
  "scripts": {
    "build": "webpack --mode production",
    "watch": "webpack --mode production --watch",
    "build-copy": "yarn build && (cat dist/bundle.js | pbcopy) && du -sh dist/*.js",
    "size": "npm run build && size-limit",
    "deploy": "node .scripts/deploy.js",
    "deploy-force": "node .scripts/deploy.js --force",
    "minor": "npm run build && bump minor --commit --tag --push --all",
    "release": "npm run build && bump major --commit --tag --push --all",
    "test": "jest"
  },
  "browserslist": [
    "ie 6"
  ],
  "size-limit": [
    {
      "path": "dist/bundle.js",
      "limit": "100 kb",
      "gzip": false
    }
  ],
  "devDependencies": {
    "@babel/core": "7.17.8",
    "@babel/plugin-transform-arrow-functions": "7.16.7",
    "@babel/preset-env": "7.16.11",
    "@babel/preset-typescript": "^7.16.7",
    "@jsdevtools/version-bump-prompt": "^6.1.0",
    "@size-limit/preset-big-lib": "7.0.8",
    "@types/commander": "^2.12.2",
    "@types/firebase": "3.2.1",
    "@types/jest": "^27.4.1",
    "@types/lodash": "4.14.180",
    "@types/uuid": "8.3.4",
    "babel-loader": "8.2.4",
    "brotli-webpack-plugin": "1.1.0",
    "commander": "^9.1.0",
    "compression-webpack-plugin": "9.2.0",
    "graphql": "^16.3.0",
    "graphql-request": "^4.1.0",
    "inquirer": "^8.2.1",
    "jest": "^27.5.1",
    "mobx-keystone": "0.67.2",
    "semver": "^7.3.5",
    "size-limit": "7.0.8",
    "ts-loader": "9.2.8",
    "typed-emitter": "^2.1.0",
    "typescript": "4.6.2",
    "webpack": "5.70.0",
    "webpack-cli": "4.9.2"
  },
  "dependencies": {
    "@fermuch/monoutils": "^0.0.37",
    "@fermuch/telematree": "^9.20.0",
    "cross-fetch": "3.1.5",
    "eta": "^1.12.3",
    "firebase": "9.6.9",
    "lodash": "4.17.21",
    "mobx": "6.5.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "web.js",
      "js",
      "web.ts",
      "ts",
      "web.tsx",
      "tsx",
      "json",
      "web.jsx",
      "jsx",
      "node"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/private/jest/setup.ts"
    ]
  }
}
